# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ieee802_15_4_swig', [dirname(__file__)])
        except ImportError:
            import _ieee802_15_4_swig
            return _ieee802_15_4_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_ieee802_15_4_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ieee802_15_4_swig = swig_import_helper()
    del swig_import_helper
else:
    import _ieee802_15_4_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
  """high_res_timer_now() -> high_res_timer_type"""
  return _ieee802_15_4_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
  """high_res_timer_now_perfmon() -> high_res_timer_type"""
  return _ieee802_15_4_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
  """high_res_timer_tps() -> high_res_timer_type"""
  return _ieee802_15_4_swig.high_res_timer_tps()

def high_res_timer_epoch():
  """high_res_timer_epoch() -> high_res_timer_type"""
  return _ieee802_15_4_swig.high_res_timer_epoch()
class access_code_prefixer(object):
    """Proxy of C++ gr::ieee802_15_4::access_code_prefixer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> sptr

        Params: (NONE)
        """
        return _ieee802_15_4_swig.access_code_prefixer_make()

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_15_4_swig.delete_access_code_prefixer
    __del__ = lambda self : None;
access_code_prefixer_swigregister = _ieee802_15_4_swig.access_code_prefixer_swigregister
access_code_prefixer_swigregister(access_code_prefixer)

def access_code_prefixer_make():
  """
    access_code_prefixer_make() -> sptr

    Params: (NONE)
    """
  return _ieee802_15_4_swig.access_code_prefixer_make()

class mac(object):
    """Proxy of C++ gr::ieee802_15_4::mac class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(debug = False):
        """
        make(bool debug = False) -> sptr

        Params: (debug)
        """
        return _ieee802_15_4_swig.mac_make(debug)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_15_4_swig.delete_mac
    __del__ = lambda self : None;
mac_swigregister = _ieee802_15_4_swig.mac_swigregister
mac_swigregister(mac)

def mac_make(debug = False):
  """
    mac_make(bool debug = False) -> sptr

    Params: (debug)
    """
  return _ieee802_15_4_swig.mac_make(debug)

class packet_sink(object):
    """Proxy of C++ gr::ieee802_15_4::packet_sink class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(threshold = 10):
        """
        make(unsigned int threshold = 10) -> sptr

        Params: (threshold)
        """
        return _ieee802_15_4_swig.packet_sink_make(threshold)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_15_4_swig.delete_packet_sink
    __del__ = lambda self : None;
packet_sink_swigregister = _ieee802_15_4_swig.packet_sink_swigregister
packet_sink_swigregister(packet_sink)

def packet_sink_make(threshold = 10):
  """
    packet_sink_make(unsigned int threshold = 10) -> sptr

    Params: (threshold)
    """
  return _ieee802_15_4_swig.packet_sink_make(threshold)

class rime_stack(object):
    """Proxy of C++ gr::ieee802_15_4::rime_stack class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(pmt_vector_uint16 bc_channels, pmt_vector_uint16 uc_channels, 
            pmt_vector_uint16 ruc_channels, pmt_vector_uint8 rime_add) -> sptr

        Params: (bc_channels, uc_channels, ruc_channels, rime_add)
        """
        return _ieee802_15_4_swig.rime_stack_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ieee802_15_4_swig.delete_rime_stack
    __del__ = lambda self : None;
rime_stack_swigregister = _ieee802_15_4_swig.rime_stack_swigregister
rime_stack_swigregister(rime_stack)

def rime_stack_make(*args, **kwargs):
  """
    rime_stack_make(pmt_vector_uint16 bc_channels, pmt_vector_uint16 uc_channels, 
        pmt_vector_uint16 ruc_channels, pmt_vector_uint8 rime_add) -> sptr

    Params: (bc_channels, uc_channels, ruc_channels, rime_add)
    """
  return _ieee802_15_4_swig.rime_stack_make(*args, **kwargs)

class access_code_prefixer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_15_4::access_code_prefixer)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> access_code_prefixer_sptr
        __init__(self, access_code_prefixer p) -> access_code_prefixer_sptr
        """
        this = _ieee802_15_4_swig.new_access_code_prefixer_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> access_code_prefixer"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr___deref__(self)

    __swig_destroy__ = _ieee802_15_4_swig.delete_access_code_prefixer_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(self) -> sptr

        Params: (NONE)
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_make(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(self, int which, int delay)
        declare_sample_delay(self, unsigned int delay)
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(self, int which) -> unsigned int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(self, int which) -> float
        pc_input_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(self, int which) -> float
        pc_output_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(self) -> float"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(self) -> int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(self) -> int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(self, int priority) -> int"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(self, pmt_t which_port) -> pmt_t"""
        return _ieee802_15_4_swig.access_code_prefixer_sptr_message_subscribers(self, *args, **kwargs)

access_code_prefixer_sptr_swigregister = _ieee802_15_4_swig.access_code_prefixer_sptr_swigregister
access_code_prefixer_sptr_swigregister(access_code_prefixer_sptr)

access_code_prefixer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
access_code_prefixer = access_code_prefixer.make;

class mac_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_15_4::mac)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> mac_sptr
        __init__(self, mac p) -> mac_sptr
        """
        this = _ieee802_15_4_swig.new_mac_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> mac"""
        return _ieee802_15_4_swig.mac_sptr___deref__(self)

    __swig_destroy__ = _ieee802_15_4_swig.delete_mac_sptr
    __del__ = lambda self : None;
    def make(self, debug = False):
        """
        make(self, bool debug = False) -> sptr

        Params: (debug)
        """
        return _ieee802_15_4_swig.mac_sptr_make(self, debug)

    def history(self):
        """history(self) -> unsigned int"""
        return _ieee802_15_4_swig.mac_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(self, int which, int delay)
        declare_sample_delay(self, unsigned int delay)
        """
        return _ieee802_15_4_swig.mac_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(self, int which) -> unsigned int"""
        return _ieee802_15_4_swig.mac_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _ieee802_15_4_swig.mac_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _ieee802_15_4_swig.mac_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _ieee802_15_4_swig.mac_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _ieee802_15_4_swig.mac_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _ieee802_15_4_swig.mac_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _ieee802_15_4_swig.mac_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _ieee802_15_4_swig.mac_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _ieee802_15_4_swig.mac_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _ieee802_15_4_swig.mac_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _ieee802_15_4_swig.mac_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.mac_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _ieee802_15_4_swig.mac_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.mac_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _ieee802_15_4_swig.mac_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.mac_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(self, int which) -> float
        pc_input_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.mac_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.mac_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.mac_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(self, int which) -> float
        pc_output_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.mac_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.mac_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(self) -> float"""
        return _ieee802_15_4_swig.mac_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _ieee802_15_4_swig.mac_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _ieee802_15_4_swig.mac_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _ieee802_15_4_swig.mac_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(self) -> int"""
        return _ieee802_15_4_swig.mac_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(self) -> int"""
        return _ieee802_15_4_swig.mac_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(self, int priority) -> int"""
        return _ieee802_15_4_swig.mac_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _ieee802_15_4_swig.mac_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _ieee802_15_4_swig.mac_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _ieee802_15_4_swig.mac_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _ieee802_15_4_swig.mac_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _ieee802_15_4_swig.mac_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _ieee802_15_4_swig.mac_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _ieee802_15_4_swig.mac_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _ieee802_15_4_swig.mac_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _ieee802_15_4_swig.mac_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _ieee802_15_4_swig.mac_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _ieee802_15_4_swig.mac_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _ieee802_15_4_swig.mac_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(self, pmt_t which_port) -> pmt_t"""
        return _ieee802_15_4_swig.mac_sptr_message_subscribers(self, *args, **kwargs)

mac_sptr_swigregister = _ieee802_15_4_swig.mac_sptr_swigregister
mac_sptr_swigregister(mac_sptr)

mac_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
mac = mac.make;

class packet_sink_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_15_4::packet_sink)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> packet_sink_sptr
        __init__(self, packet_sink p) -> packet_sink_sptr
        """
        this = _ieee802_15_4_swig.new_packet_sink_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> packet_sink"""
        return _ieee802_15_4_swig.packet_sink_sptr___deref__(self)

    __swig_destroy__ = _ieee802_15_4_swig.delete_packet_sink_sptr
    __del__ = lambda self : None;
    def make(self, threshold = 10):
        """
        make(self, unsigned int threshold = 10) -> sptr

        Params: (threshold)
        """
        return _ieee802_15_4_swig.packet_sink_sptr_make(self, threshold)

    def history(self):
        """history(self) -> unsigned int"""
        return _ieee802_15_4_swig.packet_sink_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(self, int which, int delay)
        declare_sample_delay(self, unsigned int delay)
        """
        return _ieee802_15_4_swig.packet_sink_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(self, int which) -> unsigned int"""
        return _ieee802_15_4_swig.packet_sink_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _ieee802_15_4_swig.packet_sink_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _ieee802_15_4_swig.packet_sink_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _ieee802_15_4_swig.packet_sink_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _ieee802_15_4_swig.packet_sink_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _ieee802_15_4_swig.packet_sink_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _ieee802_15_4_swig.packet_sink_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _ieee802_15_4_swig.packet_sink_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _ieee802_15_4_swig.packet_sink_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _ieee802_15_4_swig.packet_sink_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _ieee802_15_4_swig.packet_sink_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.packet_sink_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _ieee802_15_4_swig.packet_sink_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.packet_sink_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _ieee802_15_4_swig.packet_sink_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.packet_sink_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(self, int which) -> float
        pc_input_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.packet_sink_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.packet_sink_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.packet_sink_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(self, int which) -> float
        pc_output_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.packet_sink_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.packet_sink_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(self) -> float"""
        return _ieee802_15_4_swig.packet_sink_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _ieee802_15_4_swig.packet_sink_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _ieee802_15_4_swig.packet_sink_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _ieee802_15_4_swig.packet_sink_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(self) -> int"""
        return _ieee802_15_4_swig.packet_sink_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(self) -> int"""
        return _ieee802_15_4_swig.packet_sink_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(self, int priority) -> int"""
        return _ieee802_15_4_swig.packet_sink_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _ieee802_15_4_swig.packet_sink_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _ieee802_15_4_swig.packet_sink_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _ieee802_15_4_swig.packet_sink_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _ieee802_15_4_swig.packet_sink_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _ieee802_15_4_swig.packet_sink_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _ieee802_15_4_swig.packet_sink_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _ieee802_15_4_swig.packet_sink_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _ieee802_15_4_swig.packet_sink_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _ieee802_15_4_swig.packet_sink_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _ieee802_15_4_swig.packet_sink_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _ieee802_15_4_swig.packet_sink_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _ieee802_15_4_swig.packet_sink_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(self, pmt_t which_port) -> pmt_t"""
        return _ieee802_15_4_swig.packet_sink_sptr_message_subscribers(self, *args, **kwargs)

packet_sink_sptr_swigregister = _ieee802_15_4_swig.packet_sink_sptr_swigregister
packet_sink_sptr_swigregister(packet_sink_sptr)

packet_sink_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
packet_sink = packet_sink.make;

class rime_stack_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ieee802_15_4::rime_stack)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> rime_stack_sptr
        __init__(self, rime_stack p) -> rime_stack_sptr
        """
        this = _ieee802_15_4_swig.new_rime_stack_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> rime_stack"""
        return _ieee802_15_4_swig.rime_stack_sptr___deref__(self)

    __swig_destroy__ = _ieee802_15_4_swig.delete_rime_stack_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(self, pmt_vector_uint16 bc_channels, pmt_vector_uint16 uc_channels, 
            pmt_vector_uint16 ruc_channels, pmt_vector_uint8 rime_add) -> sptr

        Params: (bc_channels, uc_channels, ruc_channels, rime_add)
        """
        return _ieee802_15_4_swig.rime_stack_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _ieee802_15_4_swig.rime_stack_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(self, int which, int delay)
        declare_sample_delay(self, unsigned int delay)
        """
        return _ieee802_15_4_swig.rime_stack_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(self, int which) -> unsigned int"""
        return _ieee802_15_4_swig.rime_stack_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _ieee802_15_4_swig.rime_stack_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _ieee802_15_4_swig.rime_stack_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _ieee802_15_4_swig.rime_stack_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _ieee802_15_4_swig.rime_stack_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _ieee802_15_4_swig.rime_stack_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _ieee802_15_4_swig.rime_stack_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _ieee802_15_4_swig.rime_stack_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _ieee802_15_4_swig.rime_stack_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _ieee802_15_4_swig.rime_stack_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _ieee802_15_4_swig.rime_stack_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.rime_stack_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _ieee802_15_4_swig.rime_stack_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _ieee802_15_4_swig.rime_stack_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _ieee802_15_4_swig.rime_stack_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.rime_stack_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(self, int which) -> float
        pc_input_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.rime_stack_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.rime_stack_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.rime_stack_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(self, int which) -> float
        pc_output_buffers_full_avg(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.rime_stack_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _ieee802_15_4_swig.rime_stack_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(self) -> float"""
        return _ieee802_15_4_swig.rime_stack_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _ieee802_15_4_swig.rime_stack_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _ieee802_15_4_swig.rime_stack_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _ieee802_15_4_swig.rime_stack_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(self) -> int"""
        return _ieee802_15_4_swig.rime_stack_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(self) -> int"""
        return _ieee802_15_4_swig.rime_stack_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(self, int priority) -> int"""
        return _ieee802_15_4_swig.rime_stack_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _ieee802_15_4_swig.rime_stack_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _ieee802_15_4_swig.rime_stack_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _ieee802_15_4_swig.rime_stack_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _ieee802_15_4_swig.rime_stack_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _ieee802_15_4_swig.rime_stack_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _ieee802_15_4_swig.rime_stack_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _ieee802_15_4_swig.rime_stack_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _ieee802_15_4_swig.rime_stack_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _ieee802_15_4_swig.rime_stack_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _ieee802_15_4_swig.rime_stack_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _ieee802_15_4_swig.rime_stack_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _ieee802_15_4_swig.rime_stack_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(self, pmt_t which_port) -> pmt_t"""
        return _ieee802_15_4_swig.rime_stack_sptr_message_subscribers(self, *args, **kwargs)

rime_stack_sptr_swigregister = _ieee802_15_4_swig.rime_stack_sptr_swigregister
rime_stack_sptr_swigregister(rime_stack_sptr)

rime_stack_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
rime_stack = rime_stack.make;



